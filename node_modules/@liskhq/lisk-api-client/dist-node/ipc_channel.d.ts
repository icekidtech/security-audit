import { Channel, EventCallback } from './types';
export declare class IPCChannel implements Channel {
    isAlive: boolean;
    private readonly _events;
    private readonly _subSocket;
    private readonly _rpcClient;
    private readonly _eventPubSocketPath;
    private readonly _rpcServerSocketPath;
    private _id;
    private _pendingRequests;
    constructor(dataPath: string);
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    invoke<T = Record<string, unknown>>(actionName: string, params?: Record<string, unknown>): Promise<T>;
    subscribe<T = Record<string, unknown>>(eventName: string, cb: EventCallback<T>): void;
    unsubscribe<T = Record<string, unknown>>(eventName: string, cb: EventCallback<T>): void;
    private _listenToRPCResponse;
    private _listenToEvents;
}
