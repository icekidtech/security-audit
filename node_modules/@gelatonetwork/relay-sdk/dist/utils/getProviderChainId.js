"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProviderChainId = void 0;
const isSigner_1 = require("./isSigner");
const getProviderChainId = (signerOrProvider) => __awaiter(void 0, void 0, void 0, function* () {
    let provider;
    if ((0, isSigner_1.isSigner)(signerOrProvider)) {
        if (!signerOrProvider.provider) {
            throw new Error(`Missing provider`);
        }
        provider = signerOrProvider.provider;
    }
    else {
        provider = signerOrProvider;
    }
    const { chainId } = yield provider.getNetwork();
    return chainId;
});
exports.getProviderChainId = getProviderChainId;
