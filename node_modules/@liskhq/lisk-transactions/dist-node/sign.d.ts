/// <reference types="node" />
export interface MultiSignatureKeys {
    readonly mandatoryKeys: Array<Buffer>;
    readonly optionalKeys: Array<Buffer>;
}
export declare const getSigningBytes: (transactionObject: Record<string, unknown>, paramsSchema?: object) => Buffer;
export declare const getBytes: (transactionObject: Record<string, unknown>, paramsSchema?: object) => Buffer;
export declare const signTransaction: (transactionObject: Record<string, unknown>, chainID: Buffer, privateKey: Buffer, paramsSchema?: object) => Record<string, unknown>;
export declare const signMultiSignatureTransaction: (transactionObject: Record<string, unknown>, chainID: Buffer, privateKey: Buffer, keys: MultiSignatureKeys, paramsSchema?: object) => Record<string, unknown>;
export declare const signTransactionWithPrivateKey: (transactionObject: Record<string, unknown>, chainID: Buffer, privateKey: Buffer, paramsSchema?: object) => Record<string, unknown>;
export declare const signMultiSignatureTransactionWithPrivateKey: (transactionObject: Record<string, unknown>, chainID: Buffer, privateKey: Buffer, keys: MultiSignatureKeys, paramsSchema?: object) => Record<string, unknown>;
